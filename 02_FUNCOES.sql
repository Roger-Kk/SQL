
-- FUNÇÕES: 
SELECT rtrim('    oLÁ') AS RESULTADO; 

SELECT ltrim('    oLÁ') AS RESULTADO; 

SELECT lower('    OLÁ') AS RESULTADO; 

SELECT upper('    ola') AS RESULTADO; 

SELECT substring('OLÁ, tudo bem?',6 ) AS RESULTADO; 

SELECT substring('OLÁ, tudo bem?',4, 7 ) AS RESULTADO; 


-- Uso de funções num select
SELECT concat(NOME, ' (',CPF,') ' ) AS RESULTADO FROM tabela_de_clientes;

-- Consulta listando nome do cliente + endereço: 
SELECT * FROM tabela_de_clientes;

SELECT NOME, concat(ENDERECO_1, ', ',BAIRRO, ', ', CIDADE, ', ', ESTADO) 
AS ENDEREÇO FROM tabela_de_clientes;


-- Funções que manipulam datas
SELECT curdate();

SELECT current_time();

SELECT YEAR(current_timestamp());

SELECT MONTH(current_timestamp());

SELECT DAY(current_timestamp());

SELECT MONTHNAME(current_timestamp());

SELECT DATEDIFF(CURRENT_TIMESTAMP(), '1986-11-03') AS RESULTADO; 

SELECT DATE_SUB(current_timestamp(), INTERVAL 5 DAY) AS RESULTADO; 

SELECT DISTINCT DATA_VENDA, DAYNAME(DATA_VENDA) AS DIA, 
monthname(DATA_VENDA) AS MÊS, year(DATA_VENDA)AS ANO
FROM NOTAS_FISCAIS;


-- Consulta que mostra a idade atual dos clientes:
SELECT * FROM tabela_de_clientes;

SELECT NOME, timestampdiff(YEAR, DATA_DE_NASCIMENTO, CURDATE()) 
AS IDADE_ATUAL FROM TABELA_DE_CLIENTES;


-- Funções matemáticas: 
SELECT (23*((25+2)/2)*45) AS RESULTADO;

SELECT CEILING(12.333333) AS RESULTADO; 

SELECT FLOOR(12.33333) AS RESULTADO; 

SELECT RAND() AS RESULTADO; 

SELECT NUMERO, QUANTIDADE, PRECO, ROUND(QUANTIDADE * PRECO,2) AS FATURAMENTO
FROM itens_notas_fiscais;


-- Valor do imposto pago no ano de 2016 arredondando para o
-- menor inteiro.

SELECT * FROM notas_fiscais;
SELECT * FROM itens_notas_fiscais;

SELECT YEAR(DATA_VENDA) AS ANO, FLOOR(SUM(IMPOSTO * (QUANTIDADE*PRECO)))
AS IMPOSTO_PAGO
FROM notas_fiscais NF
INNER JOIN itens_notas_fiscais INF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(DATA_VENDA) = 2016
GROUP BY YEAR(DATA_VENDA); 

-- Formato de data: 

SELECT current_timestamp() AS RESULTADO; 

SELECT CONCAT('DIA DE HOJE: ', 
DATE_FORMAT(CURRENT_TIMESTAMP(),'%d/%m/%y' )) AS RESULTADO; 

SELECT CONCAT('O cliente ', TC.NOME, ' faturou ', 
CAST(SUM(INF.QUANTIDADE * INF.preco) AS char (20))
 , ' no ano ', CAST(YEAR(NF.DATA_VENDA) AS char (20))) AS SENTENCA FROM notas_fiscais NF
INNER JOIN itens_notas_fiscais INF ON NF.NUMERO = INF.NUMERO
INNER JOIN tabela_de_clientes TC ON NF.CPF = TC.CPF
WHERE YEAR(DATA_VENDA) = 2016
GROUP BY TC.NOME, YEAR(DATA_VENDA);

-- Mostrar vendas válidas e inválidas:
-- Solução: comparar volume_de_compra com a quantidade comprada pelo cliente

SELECT * FROM itens_notas_fiscais;
SELECT * FROM notas_fiscais;

-- Consulta com quantidade comprada por clientes no mes
SELECT NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS 
FROM itens_notas_fiscais INF
INNER JOIN notas_fiscais NF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m');

-- Consulta com limite de venda por cliente
SELECT TC.CPF, TC.NOME, TC.VOLUME_DE_COMPRA 
FROM TABELA_DE_CLIENTES TC; 

-- Comparação da consulta 2 com a consulta 1:
SELECT X.NOME, X.CPF, X.MES_ANO, X.QUANTIDADE_LIMITE, X.QUANTIDADE_VENDAS,
(X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS) AS DIFERENÇA,
CASE WHEN (X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS) < 0 THEN 'Inválida'
ELSE 'VÁLIDA' END AS STATUS_VENDA
FROM(
SELECT NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS, 
MAX(TC.VOLUME_DE_COMPRA) AS QUANTIDADE_LIMITE
FROM itens_notas_fiscais INF
INNER JOIN notas_fiscais NF
ON NF.NUMERO = INF.NUMERO
INNER JOIN tabela_de_clientes TC
ON TC.CPF = NF.CPF
GROUP BY NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m')
) X;

-- Outra consulta: 
SELECT TP.SABOR,  YEAR(NF.DATA_VENDA) AS ANO, 
SUM(INF.QUANTIDADE) AS QUANTIDADE
FROM tabela_de_produtos TP
INNER JOIN itens_notas_fiscais INF
ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN notas_fiscais NF 
ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)
ORDER BY SUM(INF.QUANTIDADE) DESC;


-- Consulta Ranking de vendas por tamanho:
SELECT VENDA_TAMANHO.TAMANHO, VENDA_TAMANHO.ANO, VENDA_TAMANHO.QUANTIDADE,
ROUND((VENDA_TAMANHO.QUANTIDADE/VENDA_TOTAL.QUANTIDADE) * 100, 2) AS PARTICIPACAO FROM 
(SELECT TP.TAMANHO, YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM 
TABELA_DE_PRODUTOS TP 
INNER JOIN ITENS_NOTAS_FISCAIS INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY TP.TAMANHO, YEAR(NF.DATA_VENDA)) AS VENDA_TAMANHO
INNER JOIN 
(SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM 
TABELA_DE_PRODUTOS TP 
INNER JOIN ITENS_NOTAS_FISCAIS INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY YEAR(NF.DATA_VENDA)) AS VENDA_TOTAL
ON VENDA_TAMANHO.ANO = VENDA_TOTAL.ANO
ORDER BY VENDA_TAMANHO.QUANTIDADE DESC
























