/*TRIGGER: Gatilho para execução de uma instrução SQL*/

SELECT * FROM NOTAS; 
SELECT * FROM NOTAS_ITENS; 

/*Inclusão de venda: */
INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES('0100', '2019-05-08', '1471156710', '235', '0,10');

INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANDITADE, PRECO)
VALUES ('0100', '1000889', 100, 10)
('0100', '10002334', 50, 20);

/*Ao incluir uma venda deve-se deletar a tabela de faturamento e depois
incluir o novo faturamento com a soma total: */
DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO;
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
NOTAS A INNER JOIN ITENS_NOTAS B
ON A.NUMERO = B.NUMERO
GROUP BY A.DATA_VENDA;

SELECT * FROM TAB_FATURAMENTO;

/*TRIGGER para executar a instrução SQL na tabela de faturamento:*/
/*Usa-se um delimitador diferente de  ; pois para um FOR EACH em SQL entende-se que o 
comando encerra em ;*/
DELIMITER //
CREATE TRIGGER TG_CALCULA_FATURAMENTO_INSERT AFTER INSERT ON ITENS_NOTAS
FOR EACH ROW BEGIN

DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO;
SELECT A.DATA_VENDA, SUM(B.QUANTIDADE * B.PRECO) AS TOTAL_VENDA FROM
NOTAS A INNER JOIN ITENS_NOTAS B
ON A.NUMERO = B.NUMERO
GROUP BY A.DATA_VENDA;

END //



