SELECT * FROM tabela_de_clientes;

SELECT ESTADO, LIMITE_DE_CREDITO FROM tabela_de_clientes;

SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes GROUP BY ESTADO;

SELECT EMBALAGEM, PRECO_DE_LISTA FROM tabela_de_produtos;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS MAIOR_PRECO FROM tabela_de_produtos GROUP BY EMBALAGEM; 

SELECT EMBALAGEM, COUNT(*) AS CONTADOR FROM tabela_de_produtos group by EMBALAGEM;

SELECT BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE FROM tabela_de_clientes GROUP BY BAIRRO; 

SELECT BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE FROM tabela_de_clientes 
WHERE CIDADE = 'Rio de Janeiro' GROUP BY BAIRRO;

SELECT ESTADO, BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE FROM tabela_de_clientes 
 GROUP BY ESTADO, BAIRRO;

SELECT ESTADO, BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE FROM tabela_de_clientes 
WHERE CIDADE = 'Rio de Janeiro' 
GROUP BY ESTADO, BAIRRO
ORDER BY BAIRRO;

SELECT * FROM itens_notas_fiscais;

SELECT MAX(QUANTIDADE) AS QUANT_MAX  FROM itens_notas_fiscais WHERE CODIGO_DO_PRODUTO = '1101035';

SELECT COUNT(*) AS ITENS_VENDA FROM itens_notas_fiscais WHERE CODIGO_DO_PRODUTO = '1101035' AND QUANTIDADE = 99;


SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS SOMA_LIMITE FROM tabela_de_clientes
GROUP BY ESTADO; 

SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS SOMA_LIMITE FROM tabela_de_clientes
GROUP BY ESTADO HAVING SUM(LIMITE_DE_CREDITO) > 900000;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAIOR,
MIN(PRECO_DE_LISTA) AS PRECO_MENOR FROM tabela_de_produtos
 GROUP BY EMBALAGEM;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAIOR,
MIN(PRECO_DE_LISTA) AS PRECO_MENOR FROM tabela_de_produtos
 GROUP BY EMBALAGEM HAVING SUM(PRECO_DE_LISTA) < 80;

SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS PRECO_MAIOR,
MIN(PRECO_DE_LISTA) AS PRECO_MENOR FROM tabela_de_produtos
 GROUP BY EMBALAGEM HAVING SUM(PRECO_DE_LISTA) < 80 AND 
 MAX(PRECO_DE_LISTA) > 5;

#CLIENTES COM MAIS DE 2000 COMPRAS EM 2016: 
SELECT * fROM tabela_de_clientes;
SELECT * FROM notas_fiscais;
SELECT* FROM itens_notas_fiscais;

SELECT CPF, COUNT(*) FROM notas_fiscais WHERE YEAR(DATA_VENDA) = 2016
GROUP BY CPF HAVING COUNT(*) > 2000;










